---
swagger: "2.0"
info:
  description: "This is a simple Cat Information Center Api"
  version: "1.0.0"
  title: "OpenAPI Cat Information Service"
tags:
- name: "cat"
  description: "Everything about your Cats"
- name: "book"
  description: "controller for book"
schemes:
- "http"
consumes:
- "application/json"
produces:
- "application/json"
paths:
  /book/add:
    post:
      tags:
      - "book"
      summary: "Add a new book to the Library"
      description: "Creates a new book in the Library"
      operationId: "addbook"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "body"
        description: "Book object that needs to be added to the store"
        required: true
        schema:
          $ref: "#/definitions/Book"
      responses:
        "201":
          description: "Successfully created"
          schema:
            $ref: "#/definitions/Book"
        "400":
          description: "Bad request"
      x-swagger-router-controller: "swagger_server.controllers.book_controller"
  /cats:
    get:
      tags:
      - "cat"
      summary: "Retrieves the list of all cats"
      description: "Retrieves the list of all cats"
      operationId: "list_cats"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters: []
      responses:
        "200":
          description: "Successfully listed"
          schema:
            $ref: "#/definitions/CatsResponse"
      x-swagger-router-controller: "swagger_server.controllers.cat_controller"
    post:
      tags:
      - "cat"
      summary: "Add a new cat to the store"
      description: "Creates a new cat in the store"
      operationId: "add_cat"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "body"
        description: "Cat object that needs to be added to the store"
        required: true
        schema:
          $ref: "#/definitions/Cat"
      responses:
        "201":
          description: "Successfully created"
          schema:
            $ref: "#/definitions/Cat"
        "400":
          description: "Bad request"
      x-swagger-router-controller: "swagger_server.controllers.cat_controller"
  /multipages:
    post:
      tags:
      - "cat"
      summary: "Takes a list of images and run pipeline including stitch"
      description: "Runs pipeline for the provided images and stitches images that\
        \ are needed to be stitched.\nThen, runs the whole pipeline on the stitched\
        \ image, too.\nNote: Image is optional if imageN is provided in multi-part\
        \ formData.\nSee [/multipages/doc](#/OCR/multipages_doc)\nNote: We officially\
        \ only support png and jpeg data and the image size is limited to 7000x7000\
        \ pixels\n"
      operationId: "multi_pages_request"
      consumes:
      - "multipart/form-data"
      produces:
      - "application/json"
      parameters:
      - name: "pdf"
        in: "formData"
        description: "PDF file content. We will consider imageN parameters only if\
          \ pdf parameter is missing from request."
        required: false
        type: "file"
      - name: "images"
        in: "formData"
        description: "multiple file content. We will consider imageN parameters only"
        required: false
        type: "array"
        items:
          type: "string"
          format: "binary"
      - name: "image0"
        in: "formData"
        required: false
        type: "file"
      - name: "image1"
        in: "formData"
        required: false
        type: "file"
      - name: "image2"
        in: "formData"
        required: false
        type: "file"
      - name: "image3"
        in: "formData"
        required: false
        type: "file"
      - name: "image4"
        in: "formData"
        required: false
        type: "file"
      - name: "image5"
        in: "formData"
        required: false
        type: "file"
      - name: "image6"
        in: "formData"
        required: false
        type: "file"
      - name: "image7"
        in: "formData"
        required: false
        type: "file"
      - name: "image8"
        in: "formData"
        required: false
        type: "file"
      - name: "image9"
        in: "formData"
        required: false
        type: "file"
      - name: "multipages_input"
        in: "formData"
        description: "Important: Due to openapi v2.0 issues, see /multipages_request\
          \ for input model of multipages_input.  See\n[/multipages/doc](#/OCR/multipages_doc)\n"
        required: true
        type: "string"
      - name: "X_Client_Trace_Id"
        in: "header"
        description: "Optional, unique ID provided by the caller of the API to track\
          \ this single http request.  Returned in responses to aid in debugging and\
          \ tracking.\n\nEach request should have a unique id. Recommend a random,\
          \ opaque UUID with no semantic, private, or secure information included.\n\
          \nIMPORTANT:  This documentation refers to the wrong header name.  Please\
          \ use \"X-Client-Trace-Id\"\n"
        required: false
        type: "string"
      responses:
        "200":
          description: "Succesful retrieval of cat"
          schema:
            $ref: "#/definitions/Cat"
        "400":
          description: "Bad request"
        "404":
          description: "Cat not found"
      x-swagger-router-controller: "swagger_server.controllers.cat_controller"
  /cats/{cat_id}:
    get:
      tags:
      - "cat"
      summary: "Retrieve a single cat"
      description: "Retrieve a single cat"
      operationId: "get_cat"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "cat_id"
        in: "path"
        description: "Id of the cat desired to be retrieved"
        required: true
        type: "string"
      responses:
        "200":
          description: "Succesful retrieval of cat"
          schema:
            $ref: "#/definitions/Cat"
        "400":
          description: "Bad request"
        "404":
          description: "Cat not found"
      x-swagger-router-controller: "swagger_server.controllers.cat_controller"
    put:
      tags:
      - "cat"
      summary: "Update an existing cat"
      description: ""
      operationId: "update_cat"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "cat_id"
        in: "path"
        description: "Id of the cat desired to be updated"
        required: true
        type: "string"
      - in: "body"
        name: "body"
        description: "Cat object that needs to be added to the store"
        required: true
        schema:
          $ref: "#/definitions/Cat"
      responses:
        "201":
          description: "Succesful update of cat"
          schema:
            $ref: "#/definitions/Cat"
        "400":
          description: "Bad request"
        "404":
          description: "Cat not found"
      x-swagger-router-controller: "swagger_server.controllers.cat_controller"
    delete:
      tags:
      - "cat"
      summary: "Delete a cat"
      description: "Delete a cat"
      operationId: "delete_cat"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "cat_id"
        in: "path"
        description: "Id of the cat desired to be deleted"
        required: true
        type: "string"
      responses:
        "204":
          description: "Succesful delete of cat"
        "400":
          description: "Bad request"
        "404":
          description: "Cat not found"
      x-swagger-router-controller: "swagger_server.controllers.cat_controller"
definitions:
  Book:
    required:
    - "ISBN"
    - "authorid"
    - "category"
    - "edition"
    - "price"
    - "title"
    properties:
      ISBN:
        type: "string"
        example: "978-3-16-148410-0"
        description: "ISBN number of the book"
      title:
        type: "string"
        description: "Name of the book"
      edition:
        type: "integer"
      price:
        type: "integer"
      category:
        type: "string"
        description: "Category of the book"
        enum:
        - "noval"
        - "general"
        - "story"
      authorid:
        type: "string"
      details:
        type: "string"
    title: "Book"
    description: "A book"
    example:
      ISBN: "978-3-16-148410-0"
      price: 6
      edition: 0
      details: "details"
      title: "title"
      category: "noval"
      authorid: "authorid"
  Cat:
    required:
    - "breed"
    - "name"
    properties:
      id:
        type: "string"
      name:
        type: "string"
        example: "Garfield"
        description: "Name of the cat"
      breed:
        type: "string"
        description: "Breed of the cat"
        enum:
        - "Abyssinian"
        - "Aegean"
        - "American Bobtail"
        - "American Curl"
        - "American Shorthair"
        - "American Wirehair"
    title: "Cat"
    description: "A cat"
    example:
      name: "Garfield"
      id: "id"
      breed: "Abyssinian"
  CatsResponse:
    type: "object"
    properties:
      cats:
        type: "array"
        description: "List of cats"
        items:
          $ref: "#/definitions/Cat"
    description: "Response object contains all the cats"
    example:
      cats:
      - name: "Garfield"
        id: "id"
        breed: "Abyssinian"
      - name: "Garfield"
        id: "id"
        breed: "Abyssinian"
